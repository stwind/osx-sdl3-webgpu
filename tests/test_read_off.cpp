#include <catch2/catch_test_macros.hpp>

#include "read_off.hpp"

#define DATA_DIR "../../data"

TEST_CASE("readOFF", "") {
  std::vector<float> V;
  std::vector<uint16_t> F;
  readOFF(DATA_DIR "/screwdriver.off", V, F);
  printf("%f,%f,%f\n", V[0], V[1], V[2]);
  printf("%d, %d", (int)V.size(), (int)F.size());

  std::vector<float> vFirst{
    0.001266  ,  0.008844  , -0.007131  ,  0.003823  ,  0.01204   ,
    -0.043731  , -0.000502  ,  0.001506  ,  0.015938  , -0.008325  ,
    -0.005836  , -0.038244  ,  0.001883  ,  0.000322  ,  0.011265  ,
    0.00727746, -0.00834503, -0.0248399 , -0.0107753 , -0.0005879 ,
    -0.024454  ,  0.0048815 ,  0.009876  , -0.025632  ,  0.001343  ,
    0.001693  , -0.002067  , -0.00826851,  0.00739667, -0.0252827
  };
  for (int i = 0, n = vFirst.size(); i < n; i++)
    REQUIRE(std::abs(V[i] - vFirst[i]) < 1e-5);

  std::vector<float> vLast{
    -0.00792777, -0.0126708 , -0.0411011 ,  0.002199  , -0.008179  ,
    -0.022103  , -0.00281461, -0.0113632 , -0.025741  , -0.0018525 ,
    0.00862809, -0.0311349 ,  0.010249  ,  0.000498  , -0.005745  ,
    0.000165  , -0.001418  ,  0.030487  , -0.00297424,  0.00039016,
    0.0391278 , -0.00812742,  0.00317326, -0.0360794 , -0.008721  ,
    -0.006291  , -0.038968  , -0.009127  , -0.004681  , -0.006614
  };
  size_t nV = V.size();
  for (int i = 0, n = vLast.size(); i < n; i++)
    REQUIRE(std::abs(V[nV - n + i] - vLast[i]) < 1e-5);

  std::vector<uint16_t> fFirst{
    1414, 1300,  349,  349, 1300, 2728, 1927, 2664, 1414, 1927,  349,
    2538,  263, 1054, 2509, 1300, 1414, 1851,  263, 2284, 1054, 1745,
    1054, 1860,  349, 2728, 2538, 2728, 1592, 3090
  };
  for (int i = 0, n = fFirst.size(); i < n; i++)
    REQUIRE(std::abs(F[i] - fFirst[i]) < 1e-5);

  std::vector<uint16_t> fLast{
    3325, 3367, 2365, 1989, 1761, 2350, 2350, 1488, 1989,  732, 2243,
    1999, 1989,  918,  314, 1024,  732, 1999, 1999, 3367, 2581, 2243,
    2365, 1999, 3367, 1999, 2365, 1761,  463, 2350
  };
  size_t nF = F.size();
  for (int i = 0, n = fLast.size(); i < n; i++)
    REQUIRE(std::abs(F[nF - n + i] - fLast[i]) < 1e-5);
}